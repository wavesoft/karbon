/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ListPresenter.java
 *
 * Created on 22 Αυγ 2010, 2:41:54 μμ
 */

package KAnalyzer.Utils;

import javax.swing.DefaultListModel;
import KAnalyzer.Utils.ReportTools.ReportFormat;
import java.util.ArrayList;

/**
 *
 * @author Ioannis Charalampidis <johnys2@gmail.com>
 */
public class ListPresenter extends KAnalyzer.API.TPresenter {

    public DefaultListModel listModel = new DefaultListModel();
    private ArrayList<String> actualData = new ArrayList<String>();

    /** Creates new form ListPresenter */
    public ListPresenter() {
        initComponents();
    }

    public void addLine(String s ) {
        listModel.addElement(s);
        actualData.add(s);
    }

    public void addLine(String display, String report) {
        listModel.addElement(display);
        actualData.add(report);
    }

    public void clear() {
        listModel.clear();
        actualData.clear();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jListData = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();

        jListData.setModel(listModel);
        jScrollPane1.setViewportView(jListData);

        jButton1.setText("Save to file");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jToggleButton1.setText("Include to report");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleButton1))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jToggleButton1)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ReportTools.saveReportDialog(this);
}//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JList jListData;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables

    @Override
    public String getReport(ReportFormat format) {
        Integer rows = listModel.getSize();
        String buffer = "";

        // Header
        if (format == ReportFormat.Text) {
            buffer += " ==[ " + Title + " ]==========================\n\n";
        } else if (format == ReportFormat.CSV) {
            buffer += Title + "\n";
        } else if (format == ReportFormat.HTML) {
            buffer += "<h2>"+Title+"</h2>\n<ul>";
        }

        // Insert rows
        for (String line: actualData) {
            if (format == ReportFormat.Text) {
                buffer += " * " +line+"\n";
            } else if (format == ReportFormat.CSV) {
                buffer +=  line.toString()+"\n";
            } else if (format == ReportFormat.HTML) {
                buffer += "   <li>" + line+"</li>\n";
            }
        }
        
        // Footer
        if (format == ReportFormat.Text) {
        } else if (format == ReportFormat.CSV) {
        } else if (format == ReportFormat.HTML) {
            buffer += "</ul>\n";
        }
        return buffer;
    }

    @Override
    public void reset() {
        listModel.clear();
    }

    @Override
    public boolean includeToReport() {
        return jToggleButton1.isSelected();
    }
    
}
